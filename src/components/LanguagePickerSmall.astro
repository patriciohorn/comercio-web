---
import { LANGUAGES } from '../i18n/ui';
import { getLangFromUrl } from '../i18n/utils';
import ChevronIcon from '@/components/icons/Chevron.astro';
import { Globe } from 'lucide-react';
const lang = getLangFromUrl(Astro.url);
const currentLocaleData = LANGUAGES[lang];

const otherLocales = Object.values(LANGUAGES).filter(
  (locale) => locale.code !== lang
);

const { isSpanish, isContactPage } = Astro.props;

function getHref(isSpanish: boolean, isContactPage: boolean) {
  if (isContactPage) {
    return isSpanish ? '/en/contact' : '/contacto';
  }

  return isSpanish ? '/en' : '/';
}
---

<div class="relative inline-block">
  <div
    class="group rounded-md text-lg font-medium text-white transition-all">
    <button
      type="button"
      class="inline-flex justify-between items-center w-full gap-x-2"
      aria-expanded="true"
      aria-haspopup="true">
      <!-- <span class="">
        <currentLocaleData.flag />
      </span> -->
      <Globe size={18} />
      {currentLocaleData.name}
      <ChevronIcon />
    </button>
    <ul
      class="group-hover:block group-hover:animate-fade-down group-hover:animate-duration-200 hidden absolute w-full font-medium py-1.5 px-1.5 text-white bg-gray-300 rounded-md bg-clip-padding backdrop-filter backdrop-blur-sm bg-opacity-20 border border-gray-100">
      {
        otherLocales.map((locale) => (
          <li class="text-center">
            {/* <Globe size={18} className="text-transparent" /> */}
            <a
              class="text-center"
              href={getHref(isSpanish, isContactPage)}>
              {/* <locale.flag /> */}
              {locale.name}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</div>
